[{"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\index.tsx":"1","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\reportWebVitals.ts":"2","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\App.tsx":"3","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\login.tsx":"4","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\block.tsx":"5","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\home.tsx":"6","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\utils\\extenssions.ts":"7","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\issues\\issueLists.tsx":"8","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\loading.tsx":"9","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\issues\\issueSummary.tsx":"10","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\areas\\areaSummary.tsx":"11","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\links\\userLink.tsx":"12","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\links\\issueLink.tsx":"13","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\blocks\\blockSummary.tsx":"14","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\utils\\urlUtil.ts":"15","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\links\\blockLink.tsx":"16","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\flexDiv.tsx":"17","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\issues\\floor.tsx":"18","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\issue.tsx":"19","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\page404.tsx":"20"},{"size":517,"mtime":1611063280076,"results":"21","hashOfConfig":"22"},{"size":440,"mtime":1611063280084,"results":"23","hashOfConfig":"22"},{"size":1700,"mtime":1611067463098,"results":"24","hashOfConfig":"22"},{"size":2454,"mtime":1611063280084,"results":"25","hashOfConfig":"22"},{"size":5283,"mtime":1611063280076,"results":"26","hashOfConfig":"22"},{"size":7161,"mtime":1611063280084,"results":"27","hashOfConfig":"22"},{"size":67,"mtime":1611063280084,"results":"28","hashOfConfig":"22"},{"size":1571,"mtime":1611063280068,"results":"29","hashOfConfig":"22"},{"size":436,"mtime":1611063280076,"results":"30","hashOfConfig":"22"},{"size":1432,"mtime":1611063280068,"results":"31","hashOfConfig":"22"},{"size":856,"mtime":1611063280068,"results":"32","hashOfConfig":"22"},{"size":635,"mtime":1611063280076,"results":"33","hashOfConfig":"22"},{"size":638,"mtime":1611063280076,"results":"34","hashOfConfig":"22"},{"size":1047,"mtime":1611063280068,"results":"35","hashOfConfig":"22"},{"size":302,"mtime":1611064471866,"results":"36","hashOfConfig":"22"},{"size":647,"mtime":1611063280076,"results":"37","hashOfConfig":"22"},{"size":394,"mtime":1611063280068,"results":"38","hashOfConfig":"22"},{"size":1074,"mtime":1612187933734,"results":"39","hashOfConfig":"22"},{"size":1245,"mtime":1613133028049,"results":"40","hashOfConfig":"22"},{"size":538,"mtime":1611066367057,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kdu4jj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\index.tsx",[],["92","93"],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\reportWebVitals.ts",[],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\App.tsx",["94","95"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './content/app.css';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\r\nimport { Login } from './pages/login';\r\nimport { Home } from './pages/home';\r\nimport { Block } from './pages/block';\r\nimport { Issue } from './pages/issue';\r\nimport { Page404 } from './pages/page404';\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Layout className=\"layout\">\r\n                <Header>\r\n                    <div className=\"logo\" />\r\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                        <Menu.Item key=\"1\"><Link to=\"/\">主页</Link></Menu.Item>\r\n                        <Menu.Item>登录</Menu.Item>\r\n                    </Menu>\r\n                </Header>\r\n                <Content style={{ padding: '0 50px', display: 'flex', flexDirection: 'column' }}>\r\n                    <div className=\"site-layout-content\">\r\n                        <Route path=\"/\" exact component={Home}></Route>\r\n                        <Route path=\"/login\" exact component={Login}></Route>\r\n                        <Route path=\"/block/:id\" exact component={Block}></Route>\r\n                        <Route path=\"/issue/:id\" exact component={Issue}></Route>\r\n                        {/* <Route path=\"/\" component={Page404}></Route> */}\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>DBD2 Discuss ©2021 Created by TechClub</Footer>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\login.tsx",["96"],"import React from 'react';\r\nimport { Row, Col, Divider, Card, Form, Input, Button, Checkbox } from 'antd'\r\n\r\nexport class Login extends React.Component<IProps, IState> {\r\n    layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n    tailLayout = {\r\n        wrapperCol: { offset: 6, span: 16 },\r\n    };\r\n    onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    render() {\r\n        return (\r\n            <Row justify=\"space-around\" align=\"middle\">\r\n                <Col md={{ offset: 6, span: 12 }} xl={{ offset: 16, span: 6 }} sm={24}>\r\n                    <Card title=\"Welcome to JupiterDiscuss!\">\r\n                        <Form\r\n                            {...this.layout}\r\n                            name=\"basic\"\r\n                            initialValues={{ remember: true }}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"员工卡号\"\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: '请输入用户名' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"密码\"\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: '请输入密码' }]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item {...this.tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                                <Checkbox>记住我</Checkbox>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item {...this.tailLayout}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    登录\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IProps {\r\n\r\n}\r\ninterface IState {\r\n\r\n}","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\block.tsx",["97","98"],"import { Col, List, Row, Typography } from \"antd\";\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport { IssueSummary } from \"../components/issues/issueSummary\";\r\nimport { Loading } from \"../components/loading\";\r\nimport { BlockModel } from \"../models/blockModel\";\r\nimport { IssueModel } from \"../models/issueModel\";\r\nimport { isLoading } from \"../utils/extenssions\";\r\n\r\nconst { Text, Title } = Typography;\r\n\r\n\r\nlet state: State | null = null;\r\n\r\nexport const Block: FunctionComponent<IProps> = ({ match }) => {\r\n    //const [state, setState] = useState<State>(new State());\r\n    state = {\r\n        id: match.params.id,\r\n        top: [],\r\n        topics: [\r\n            {\r\n                title:\r\n                    \"这是一个非常长的标题，以至于我都不知道首页能不能完整的把他显示出来。如果你能看到这里，说明你在用一块带鱼屏。\",\r\n                replyCount: 1,\r\n                author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                replies: [],\r\n                id: 1,\r\n                publishDate: \"2020-12-28\",\r\n            },\r\n            {\r\n                title: \"怎么又下雪了，我吐了\",\r\n                replyCount: 120,\r\n                author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                replies: [],\r\n                id: 3,\r\n                publishDate: \"2020-12-28\",\r\n            },\r\n            {\r\n                title: \"猜猜年会都有什么奖项\",\r\n                replyCount: 4,\r\n                author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                replies: [],\r\n                id: 2,\r\n                publishDate: \"2020-12-28\",\r\n            },\r\n        ],\r\n        block: { name: \".Net\", description: \"welcome to .Net 5\", avatar: \"\", id: 22 },\r\n    };\r\n    useEffect(() => {\r\n        console.log(match.params.id);\r\n        return () => {\r\n            state = {\r\n                id: match.params.id,\r\n                top: [],\r\n                topics: [\r\n                    {\r\n                        title:\r\n                            \"这是一个非常长的标题，以至于我都不知道首页能不能完整的把他显示出来。如果你能看到这里，说明你在用一块带鱼屏。\",\r\n                        replyCount: 1,\r\n                        author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                        replies: [],\r\n                        id: 1,\r\n                        publishDate: \"2020-12-28\",\r\n                    },\r\n                    {\r\n                        title: \"怎么又下雪了，我吐了\",\r\n                        replyCount: 120,\r\n                        author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                        replies: [],\r\n                        id: 3,\r\n                        publishDate: \"2020-12-28\",\r\n                    },\r\n                    {\r\n                        title: \"猜猜年会都有什么奖项\",\r\n                        replyCount: 4,\r\n                        author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                        replies: [],\r\n                        id: 2,\r\n                        publishDate: \"2020-12-28\",\r\n                    },\r\n                ],\r\n                block: { name: \".Net\", description: \"welcome to .Net 5\", avatar: \"\", id: 22 },\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"normal-content\">\r\n            <Loading dataSource={state}>\r\n                <Row gutter={[0, 24]}>\r\n                    <Col span={24}>\r\n                        <Title level={3}>{state?.block.name}</Title>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Text>{state?.block.description}</Text>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <List\r\n                            header={<Text>置顶</Text>}\r\n                            loading={isLoading(state?.top)}\r\n                            dataSource={state?.top}\r\n                            bordered\r\n                        />\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <List\r\n                            bordered\r\n                            header={<Text>帖子一览</Text>}\r\n                            renderItem={(item: IssueModel) => <List.Item><IssueSummary issue={item} /></List.Item>}\r\n                            dataSource={state?.topics}\r\n                            loading={isLoading(state?.topics)}\r\n                            pagination={{\r\n                                pageSize: 20,\r\n                                onChange: (idx, size) => console.log(idx, size),\r\n                                showSizeChanger: true,\r\n                            }}\r\n                        /></Col>\r\n                </Row>\r\n            </Loading>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\ninterface IProps extends RouteComponentProps<MatchParams> { }\r\n\r\nclass State {\r\n    id: string = \"\";\r\n    block: BlockModel = {\r\n        id: 0,\r\n        name: \"\",\r\n        description: \"\",\r\n        avatar: \"\"\r\n    };\r\n    topics: IssueModel[] = [];\r\n    top: IssueModel[] = [];\r\n}\r\n","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\home.tsx",["99","100","101"],"import React from \"react\";\r\nimport { List, Typography, Divider, Row, Col, Card } from \"antd\";\r\nimport { IssueList } from \"../components/issues/issueLists\";\r\nimport { IssueModel } from \"../models/issueModel\";\r\nimport { IssueSummary } from \"../components/issues/issueSummary\";\r\nimport { AreaSummary } from \"../components/areas/areaSummary\";\r\nimport { AreaModel } from \"../models/areaModel\";\r\nimport { Loading } from \"../components/loading\";\r\nimport { BlockModel } from \"../models/blockModel\";\r\n\r\nconst { Text } = Typography;\r\n\r\nexport class Home extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            areas: [\r\n                {\r\n                    name: \"畅谈天下\",\r\n                    id: 1,\r\n                    blocks: [\r\n                        {\r\n                            id: 1,\r\n                            name: \"日常闲聊\",\r\n                            description: \"说说日常，平时发生的事情，畅所欲言~\",\r\n                            avatar: \"\",\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"日常闲聊\",\r\n                            description: \"说说日常，平时发生的事情，畅所欲言~\",\r\n                            avatar: \"\",\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"日常闲聊\",\r\n                            description: \"说说日常，平时发生的事情，畅所欲言~\",\r\n                            avatar: \"\",\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"日常闲聊\",\r\n                            description: \"说说日常，平时发生的事情，畅所欲言~\",\r\n                            avatar: \"\",\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"日常闲聊\",\r\n                            description: \"说说日常，平时发生的事情，畅所欲言~\",\r\n                            avatar: \"\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    name: \"技术交流\",\r\n                    id: 2,\r\n                    blocks: [\r\n                        {\r\n                            id: 21,\r\n                            name: \"Java\",\r\n                            description: \"Java是世界上最好的语言！\",\r\n                            avatar: \"\",\r\n                        },\r\n                        {\r\n                            id: 22,\r\n                            name: \".Net\",\r\n                            description: \"听说.Net不只能用在Windows上面？\",\r\n                            avatar: \"\",\r\n                        },\r\n                        {\r\n                            id: 23,\r\n                            name: \"前端\",\r\n                            description: \"Vue vs React vs NG vs JQuery\",\r\n                            avatar: \"\",\r\n                        },\r\n                        {\r\n                            id: 24,\r\n                            name: \"移动开发\",\r\n                            description: \"你用什么手机？\",\r\n                            avatar: \"\",\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            favourites: {\r\n                name: \"我的最爱\",\r\n                id: 1,\r\n                blocks: [\r\n                    {\r\n                        id: 22,\r\n                        name: \".Net\",\r\n                        description: \"听说.Net不只能用在Windows上面？\",\r\n                        avatar: \"\",\r\n                    },\r\n                    {\r\n                        id: 23,\r\n                        name: \"前端\",\r\n                        description: \"Vue vs React vs NG vs JQuery\",\r\n                        avatar: \"\",\r\n                    },\r\n                ],\r\n            },\r\n        };\r\n    }\r\n    render() {\r\n        let newIssues: IssueModel[] = [\r\n            {\r\n                title:\r\n                    \"这是一个非常长的标题，以至于我都不知道首页能不能完整的把他显示出来。如果你能看到这里，说明你在用一块带鱼屏。\",\r\n                replyCount: 1,\r\n                author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                replies: [],\r\n                id: 1,\r\n                publishDate: \"2020-12-28\",\r\n            },\r\n            {\r\n                title: \"怎么又下雪了，我吐了\",\r\n                replyCount: 120,\r\n                author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                replies: [],\r\n                id: 3,\r\n                publishDate: \"2020-12-28\",\r\n            },\r\n            {\r\n                title: \"猜猜年会都有什么奖项\",\r\n                replyCount: 4,\r\n                author: { nickName: \"daemon\", id: 1, avatar: \"\" },\r\n                replies: [],\r\n                id: 2,\r\n                publishDate: \"2020-12-28\",\r\n            },\r\n        ];\r\n        return (\r\n            <div className=\"normal-content\">\r\n                <Row gutter={[24, 24]} style={{ flex: 1 }}>\r\n                    <Col lg={12} md={24}>\r\n                        <IssueList title=\"新帖子\" dataSource={newIssues} />\r\n                    </Col>\r\n                    <Col lg={12} md={24}>\r\n                        <IssueList title=\"24小时热帖\" dataSource={newIssues} />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[24, 24]}>\r\n                    <Loading dataSource={this.state.favourites}>\r\n                        <Col span={24}>\r\n                            <Card title={\"我的收藏\"}>\r\n                                <AreaSummary area={this.state.favourites} />\r\n                            </Card>\r\n                        </Col>\r\n                    </Loading>\r\n                </Row>\r\n                <Row gutter={[0, 24]}>\r\n                    <Col span={24}>\r\n                        <Loading dataSource={this.state.areas}>\r\n                            <List\r\n                                dataSource={this.state.areas}\r\n                                header={<Text>分区板块</Text>}\r\n                                renderItem={(ele: AreaModel) => (\r\n                                    <List.Item>\r\n                                        <Col span={24}>\r\n                                            <AreaSummary area={ele} showTitle={true} />\r\n                                        </Col>\r\n                                    </List.Item>\r\n                                )}\r\n                                bordered\r\n                            ></List>\r\n                        </Loading>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    renderItem = (issueModel: IssueModel, index: number) => {\r\n        return <></>;\r\n    };\r\n}\r\ninterface IProps { }\r\ninterface IState {\r\n    areas: AreaModel[];\r\n    favourites: AreaModel;\r\n}\r\n","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\utils\\extenssions.ts",[],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\issues\\issueLists.tsx",["102","103","104","105","106","107","108"],"import React from \"react\";\r\nimport { List, Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IssueModel } from \"../../models/issueModel\";\r\nimport { IconText } from \"../iconText\";\r\nimport { MessageOutlined } from \"@ant-design/icons\";\r\nimport { IssueLink } from \"../links/issueLink\";\r\nimport { UserLink } from \"../links/userLink\";\r\nimport { IssueSummary } from \"./issueSummary\";\r\nimport { listenerCount } from \"process\";\r\n\r\nexport class IssueList extends React.Component<IProps, IState> {\r\n    render() {\r\n        return (\r\n            <List\r\n                header={<div>{this.props.title}</div>}\r\n                itemLayout=\"horizontal\"\r\n                footer={this.generateFooter()}\r\n                dataSource={this.props.dataSource}\r\n                renderItem={(item, idx) => (\r\n                    <List.Item>\r\n                        Show<IssueSummary issue={item} />\r\n                    </List.Item>\r\n                )}\r\n                bordered\r\n            />\r\n        );\r\n    }\r\n\r\n    generateFooter = (): JSX.Element => {\r\n        if (this.props.showShowmoreButton == false) {\r\n            return <></>;\r\n        }\r\n        return (\r\n            <div style={{ textAlign: \"right\" }}>\r\n                <Link to={this.props.showmoreLink ?? \"\"}>显示更多</Link>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst defaultProps = {\r\n    maxShowCount: 10,\r\n    showShowmoreButton: false,\r\n    showmoreLink: \"\",\r\n};\r\ntype IProps = {\r\n    title: string;\r\n    dataSource: IssueModel[];\r\n} & Partial<typeof defaultProps>;\r\ninterface IState {}\r\n","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\loading.tsx",[],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\issues\\issueSummary.tsx",["109","110","111","112","113"],"import { Badge, Col, Descriptions, Row, Space, Typography } from \"antd\";\r\nimport { MessageOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport { IssueModel } from \"../../models/issueModel\";\r\nimport { UrlUtil } from \"../../utils/urlUtil\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserLink } from \"../links/userLink\";\r\nimport { IssueLink } from \"../links/issueLink\";\r\nconst { Paragraph } = Typography;\r\n\r\nexport class IssueSummary extends React.Component<IProps, IState> {\r\n    render() {\r\n        return (\r\n            <Row gutter={36} style={{ width: \"100%\" }}>\r\n                <Col span={12}>\r\n                    <IssueLink issue={this.props.issue}></IssueLink>\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: \"right\" }}>\r\n                    <UserLink user={this.props.issue.author} />\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: \"right\" }}>\r\n                    {this.props.issue.publishDate}\r\n                </Col>\r\n                <Col span={4}>\r\n                    <div style={{ textAlign: \"right\" }}>\r\n                        <MessageOutlined twoToneColor=\"#52c41a\" />\r\n                        <Badge count={this.props.issue.replyCount} overflowCount={99}></Badge>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IProps {\r\n    issue: IssueModel;\r\n}\r\n\r\ninterface IState {}\r\n","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\areas\\areaSummary.tsx",["114","115"],"import { Card, Col, Row, Space } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { AreaModel } from \"../../models/areaModel\";\r\nimport { BlockSummary } from \"../blocks/blockSummary\";\r\nimport { FlexDiv } from \"../flexDiv\";\r\n\r\ninterface IProps {\r\n    area: AreaModel;\r\n    showTitle?: boolean;\r\n}\r\n\r\nexport const AreaSummary: FunctionComponent<IProps> = ({ area, showTitle }) => (\r\n    <Row>\r\n        <Col span={24}>\r\n            <Card title={showTitle ? area.name : \"\"} bordered={false}>\r\n                <Row>\r\n                    {area.blocks.map((block) => (\r\n                        <Col lg={4} md={8} xs={24}>\r\n                            <BlockSummary block={block} key={`blocks${Math.random()}`} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n);\r\n","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\links\\userLink.tsx",[],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\links\\issueLink.tsx",[],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\blocks\\blockSummary.tsx",["116","117"],"import { ArrowDownOutlined, WindowsOutlined } from \"@ant-design/icons\";\r\nimport { Avatar, Typography } from \"antd\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { BlockModel } from \"../../models/blockModel\";\r\nimport { FlexDiv } from \"../flexDiv\";\r\nimport { BlockLink } from \"../links/blockLink\";\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport const BlockSummary: FunctionComponent<IProps> = ({ block }) => (\r\n    <BlockLink block={block}>\r\n        <FlexDiv>\r\n            <div>\r\n                <Avatar size={64} icon={<WindowsOutlined />} />\r\n            </div>\r\n            <FlexDiv flexDirection=\"column\">\r\n                <div>\r\n                    <BlockLink block={block} />\r\n                </div>\r\n                <div>\r\n                    <Paragraph ellipsis={{ rows: 2 }} title={block.description}>\r\n                        {block.description}\r\n                    </Paragraph>\r\n                </div>\r\n            </FlexDiv>\r\n        </FlexDiv>\r\n    </BlockLink>\r\n);\r\n\r\ninterface IProps {\r\n    block: BlockModel;\r\n}\r\n","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\utils\\urlUtil.ts",[],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\links\\blockLink.tsx",[],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\flexDiv.tsx",[],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\components\\issues\\floor.tsx",["118"],"import { GoogleCircleFilled } from \"@ant-design/icons\";\r\nimport { Avatar, Card, Col, Row, Typography } from \"antd\";\r\nimport { FC } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { UserModel } from \"../../models/userModel\";\r\nimport { UserLink } from \"../links/userLink\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport const Floor: FC<IProps> = ({ user }) => {\r\n\r\n    return (\r\n        <Row style={{ flex: 1 }}>\r\n            <Col flex=\"200px\">\r\n                <Card style={{ width: \"100%\" }} className=\"issue-left\">\r\n                    <UserLink user={user}>用户名</UserLink>\r\n                    <Avatar size={128} icon={<GoogleCircleFilled />} />\r\n                </Card>\r\n            </Col>\r\n            <Col flex=\"auto\">\r\n                <Row>\r\n                    <Col span={24}></Col>\r\n                    <Col span={24}>\r\n                        <ReactMarkdown children={\"# title\"}></ReactMarkdown>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\ninterface IProps {\r\n    user: UserModel;\r\n}","C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\issue.tsx",["119"],"C:\\Users\\21513\\Documents\\GitHub\\JupiterDiscuss\\jupiter_discuss\\src\\pages\\page404.tsx",["120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":24,"nodeType":"128","messageId":"129","endLine":4,"endColumn":34},{"ruleId":"126","severity":1,"message":"130","line":10,"column":10,"nodeType":"128","messageId":"129","endLine":10,"endColumn":17},{"ruleId":"126","severity":1,"message":"131","line":2,"column":20,"nodeType":"128","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"126","severity":1,"message":"132","line":2,"column":47,"nodeType":"128","messageId":"129","endLine":2,"endColumn":55},{"ruleId":"126","severity":1,"message":"133","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"131","line":2,"column":28,"nodeType":"128","messageId":"129","endLine":2,"endColumn":35},{"ruleId":"126","severity":1,"message":"134","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":22},{"ruleId":"126","severity":1,"message":"135","line":9,"column":10,"nodeType":"128","messageId":"129","endLine":9,"endColumn":20},{"ruleId":"126","severity":1,"message":"136","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":19},{"ruleId":"126","severity":1,"message":"137","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":18},{"ruleId":"126","severity":1,"message":"138","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":25},{"ruleId":"126","severity":1,"message":"139","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":19},{"ruleId":"126","severity":1,"message":"140","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":18},{"ruleId":"126","severity":1,"message":"141","line":10,"column":10,"nodeType":"128","messageId":"129","endLine":10,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":31,"column":43,"nodeType":"144","messageId":"145","endLine":31,"endColumn":45},{"ruleId":"126","severity":1,"message":"146","line":1,"column":22,"nodeType":"128","messageId":"129","endLine":1,"endColumn":34},{"ruleId":"126","severity":1,"message":"147","line":1,"column":41,"nodeType":"128","messageId":"129","endLine":1,"endColumn":46},{"ruleId":"126","severity":1,"message":"148","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":17},{"ruleId":"126","severity":1,"message":"133","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"149","line":9,"column":9,"nodeType":"128","messageId":"129","endLine":9,"endColumn":18},{"ruleId":"126","severity":1,"message":"147","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":31},{"ruleId":"126","severity":1,"message":"150","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":17},{"ruleId":"126","severity":1,"message":"151","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"152","line":7,"column":9,"nodeType":"128","messageId":"129","endLine":7,"endColumn":14},{"ruleId":"126","severity":1,"message":"149","line":8,"column":9,"nodeType":"128","messageId":"129","endLine":8,"endColumn":18},{"ruleId":"126","severity":1,"message":"149","line":7,"column":9,"nodeType":"128","messageId":"129","endLine":7,"endColumn":18},{"ruleId":"126","severity":1,"message":"136","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"153","line":5,"column":9,"nodeType":"128","messageId":"129","endLine":5,"endColumn":13},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"@typescript-eslint/no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'Page404' is defined but never used.","'Divider' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'IssueSummary' is defined but never used.","'BlockModel' is defined but never used.","'Col' is defined but never used.","'IconText' is defined but never used.","'MessageOutlined' is defined but never used.","'IssueLink' is defined but never used.","'UserLink' is defined but never used.","'listenerCount' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Descriptions' is defined but never used.","'Space' is defined but never used.","'UrlUtil' is defined but never used.","'Paragraph' is assigned a value but never used.","'FlexDiv' is defined but never used.","'ArrowDownOutlined' is defined but never used.","'Title' is assigned a value but never used.","'Text' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]